#!/bin/bash

# Note:
# This script is sourced by the mpbb wrapper script.
# Do not execute this directly!


install-port-help() {
    echo "Build and install the port --port itself."
}

install-port() {
    local log_port_contents="${option_logdir}/port-contents.txt"
    local log_port_stats="${option_logdir}/port-statistics.txt"
    local log_port_main="${option_logdir}/main.log"
    local log_subports_progress="${option_logdir}/ports-progress.txt"

    if [ -z "${option_port}" ]; then
        errmsg "--port is required"
        return 1
    fi

    # prepare the log files and make sure to start with empty ones
    mkdir -p "${option_logdir}"
    #> "$log_port_contents"
    > "$log_port_stats"

    # log: summary for the portwatcher
    echo -n "- Installing ${option_port} ... " >> "$log_subports_progress"

    local time_start=$(date +%s)
    if ! "${option_prefix}/bin/port" -dk install "${option_port}"; then
        echo "Build of '${option_port}' failed."
        echo "[FAIL]" >> "$log_subports_progress"
        return 1
    fi
    local time_stop=$(date +%s)

    echo "[OK]" >> "$log_subports_progress"

    # log: contents
    "${option_prefix}/bin/port" -q contents "${option_port}" > "$log_port_contents"

    # TODO: printing statistics (and installing the port + dependencies)
    #       only makes sense when the port hasn't been installed previously
    # log: statistics
    echo "time:    $(($time_stop - $time_start))s" >> "$log_port_stats"

    local port_workdir=$("${option_prefix}/bin/port" work "${option_port}")
    local port_workdir_size=$(du -ks "$port_workdir" | sed 's/^ *//' | tr '\t' '\n' | head -n 1)
    echo "workdir: ${port_workdir_size}k" >> "$log_port_stats"
    local port_destdir="$port_workdir/destroot"
    if [ -d "$port_destdir" ]; then 
        local port_destdir_size=$(du -ks "$port_destdir" | sed 's/^ *//' | tr '\t' '\n' | head -n 1)
        echo "destdir: ${port_destdir_size}k" >> "$log_port_stats"
    else
        echo "destdir: -" >> "$log_port_stats"
    fi

    # log: main.log
    local port_mainlog=$("${option_prefix}/bin/port" logfile "${option_port}")
    if [ -f $port_mainlog ]; then
        cp -f "$port_mainlog" "$log_port_main"
    fi
}
