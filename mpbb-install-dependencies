#!/bin/bash

# Note:
# This script is sourced by the mpbb wrapper script.
# Do not execute this directly!


install-dependencies-help() {
    echo "Build and install all dependencies of port --port."
}

install-dependencies() {
    local dependencies
    local dependencies_count
    local dependencies_counter
    local log_status_dependencies

    if [ -z "${option_port}" ]; then
        errmsg "--port is required"
        return 1
    fi

    # prepare the log file and make sure to start with an empty one
    mkdir -p "${option_logdir}"
    log_status_dependencies="${option_logdir}/dependencies-progress.txt"
    > "$log_status_dependencies"

    # calculate list of dependencies in-order
    dependencies=$("${option_prefix}/bin/port-tclsh" "${thisdir}/tools/dependencies.tcl" "${option_port}")
    if [ $? -ne 0 ]; then
        echo "Calculating dependencies for '${option_port}' failed, aborting." >&2
        return 1
    fi

    if [ -z "$dependencies" ]; then
        echo "'${option_port}' has no dependencies, continuing." >&2
        return 0
    fi

    dependencies_count=$(echo "$dependencies" | wc -l | sed 's/ *//g')
    dependencies_counter=1

    text="Installing $dependencies_count dependencies of $option_port:"
    echo "$text"
    echo "$text" >> "$log_status_dependencies"

    text=$(echo "$dependencies" | sed -E 's/^/ - /')
    echo "$text"
    echo "$text" >> "$log_status_dependencies"

    echo >> "$log_status_dependencies"

    echo "$dependencies" | while read dependency; do
        # Split portname +variant1+variant2 into portname and variants, where
        # the variants are optional.
        depname=${dependency%% *}
        depvariants=${dependency:${#depname}+1}

        text="Installing dependency ($dependencies_counter of $dependencies_count) '${depname}' with variants '${depvariants}'"
        echo "----> ${text}"
        echo -n "${text} ... " >> "$log_status_dependencies"
        if ! "${option_prefix}/bin/port" -d install --unrequested "$depname" $depvariants; then
            echo "Build of dependency '${depname}' failed, aborting." >&2
            echo " [FAIL]" >> "$log_status_dependencies"
            return 1
        else
            echo " [OK]" >> "$log_status_dependencies"
            dependencies_counter=$((dependencies_counter + 1))
        fi
    done
}

